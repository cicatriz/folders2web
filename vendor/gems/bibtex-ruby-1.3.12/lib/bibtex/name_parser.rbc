!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
46
5
7
0
64
47
49
1
1
15
5
7
2
64
47
49
1
1
15
99
7
3
65
49
4
2
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
15
2
11
I
6
I
0
I
0
I
0
n
p
8
s
14
racc/parser.rb
x
7
require
s
7
strscan
x
6
BibTeX
x
11
open_module
x
15
__module_init__
M
1
n
n
x
6
BibTeX
i
33
5
66
99
7
0
45
1
2
43
3
65
49
4
3
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
11
I
6
I
0
I
0
I
0
n
p
8
x
10
NameParser
x
4
Racc
n
x
6
Parser
x
10
open_class
x
14
__class_init__
M
1
n
n
x
10
NameParser
i
1335
5
66
5
7
0
64
7
1
64
4
78
47
49
2
3
15
7
3
7
4
7
3
7
5
4
27
7
6
7
3
7
4
7
4
7
5
7
3
7
6
4
36
4
24
7
4
4
34
4
33
4
35
4
21
4
19
4
22
4
10
4
16
4
11
4
34
4
33
4
35
4
34
4
33
4
35
4
10
4
8
4
11
4
21
4
28
4
22
4
34
4
33
4
35
4
34
4
33
4
35
4
10
4
8
4
11
4
21
4
19
4
22
4
38
4
23
4
13
4
12
35
52
19
0
15
4
19
4
16
4
19
4
11
4
18
4
10
4
19
4
16
4
8
4
11
4
8
4
10
4
26
4
12
4
8
4
32
4
32
4
32
4
6
4
6
4
6
4
5
4
5
4
5
4
36
4
36
4
36
4
27
4
27
4
27
4
13
4
13
4
13
4
20
4
20
4
20
4
38
4
38
4
38
4
23
4
23
4
23
78
78
78
4
15
4
15
4
15
4
30
4
7
80
79
35
52
19
1
15
4
39
4
51
4
44
1
1
4
18
4
15
4
47
4
8
1
4
5
4
3
4
13
4
27
1
4
42
79
1
80
78
4
30
1
1
4
36
1
1
4
10
4
24
1
1
4
46
1
4
12
1
1
1
4
21
1
4
33
1
1
1
35
42
19
2
15
77
7
7
7
8
7
9
7
10
7
11
7
7
7
7
7
12
7
13
7
14
7
15
7
7
7
7
7
16
7
7
7
12
7
17
7
18
7
19
7
11
7
14
7
15
7
20
4
42
7
21
7
22
7
20
7
23
7
24
7
25
7
26
7
27
7
4
7
6
7
5
7
20
7
28
7
20
7
29
7
30
7
31
35
42
19
3
15
4
4
4
17
4
3
4
20
4
29
4
14
4
15
80
4
37
4
18
4
41
79
4
20
4
4
1
4
25
4
17
4
40
4
26
1
1
1
1
1
1
1
1
1
1
1
1
1
4
39
35
33
19
4
15
4
4
4
10
4
3
4
5
4
8
4
4
4
6
80
4
8
4
7
4
9
79
4
5
4
4
1
4
3
4
10
4
8
4
7
1
1
1
1
1
1
1
1
1
1
1
1
1
4
4
35
33
19
5
15
1
4
11
4
7
80
78
7
9
79
4
3
7
13
7
6
7
21
1
35
12
19
6
15
1
1
1
1
4
31
4
5
4
6
4
7
1
4
30
4
9
4
32
35
12
19
7
15
78
78
7
32
78
4
9
7
33
79
4
9
7
34
79
4
10
7
35
4
3
4
10
7
36
79
4
11
7
37
80
4
11
7
38
4
3
4
11
7
39
80
4
11
7
40
4
3
4
11
7
41
4
4
4
11
7
42
4
5
4
11
7
43
79
4
14
7
44
80
4
14
7
45
4
3
4
14
7
46
79
4
15
7
47
79
4
15
7
48
79
4
16
7
49
4
3
4
16
7
50
79
4
13
7
51
80
4
13
7
52
79
4
18
7
53
79
4
18
7
54
79
4
19
7
55
80
4
19
7
56
78
4
17
7
57
79
4
17
7
58
79
4
12
7
59
79
4
12
7
60
79
4
12
7
61
35
90
19
8
15
4
30
19
9
15
4
42
19
10
15
44
43
62
4
8
49
63
1
13
3
78
49
64
2
15
13
7
65
79
49
64
2
15
13
7
66
80
49
64
2
15
13
7
67
4
3
49
64
2
15
13
7
68
4
4
49
64
2
15
13
7
69
4
5
49
64
2
15
13
7
70
4
6
49
64
2
15
13
7
71
4
7
49
64
2
15
19
11
15
4
8
19
12
15
2
19
13
15
65
7
72
20
0
20
1
20
3
20
2
20
4
20
5
20
7
20
6
20
12
20
8
20
11
20
10
20
9
20
13
35
14
49
73
2
15
65
7
74
7
75
64
7
76
64
7
77
64
7
78
64
7
79
64
7
80
64
7
81
64
7
82
64
7
83
64
7
84
64
7
85
64
7
86
64
7
87
64
7
88
64
7
89
64
7
90
64
7
91
64
7
92
64
7
93
64
7
94
64
35
20
49
73
2
15
65
7
95
3
49
73
2
15
5
7
96
64
7
1
64
4
31
47
49
2
3
15
5
7
97
64
7
1
64
4
32
47
49
2
3
15
5
7
98
64
7
1
64
4
34
47
49
2
3
15
5
7
99
64
7
1
64
4
35
47
49
2
3
15
5
7
100
64
7
1
64
4
37
47
49
2
3
15
5
7
101
64
7
1
64
4
38
47
49
2
3
15
5
7
102
64
7
1
64
4
39
47
49
2
3
15
5
7
103
64
7
1
64
4
40
47
49
2
3
15
5
7
104
64
7
1
64
4
41
47
49
2
3
15
5
7
105
64
7
1
64
4
42
47
49
2
3
15
5
7
106
64
7
1
64
4
43
47
49
2
3
15
5
7
107
64
7
1
64
4
45
47
49
2
3
15
5
7
108
64
7
1
64
4
46
47
49
2
3
15
5
7
109
64
7
1
64
4
47
47
49
2
3
15
5
7
110
64
7
1
64
4
49
47
49
2
3
15
5
7
111
64
7
1
64
4
50
47
49
2
3
15
5
7
112
64
7
1
64
4
52
47
49
2
3
15
5
7
113
64
7
1
64
4
53
47
49
2
3
15
5
7
114
64
7
1
64
4
55
47
49
2
3
15
5
7
115
64
7
1
64
4
56
47
49
2
3
15
5
7
116
64
7
1
64
4
58
47
49
2
3
15
5
7
117
64
7
1
64
4
59
47
49
2
3
15
5
7
118
64
7
1
64
4
61
47
49
2
3
15
5
7
119
64
7
1
64
4
62
47
49
2
3
15
5
7
120
64
7
1
64
4
64
47
49
2
3
15
5
7
121
64
7
1
64
4
65
47
49
2
3
15
5
7
122
64
7
1
64
4
67
47
49
2
3
15
5
7
123
64
7
1
64
4
68
47
49
2
3
15
5
7
124
64
7
1
64
4
69
47
49
2
3
15
99
7
125
7
126
65
67
49
127
0
49
128
4
11
I
68
I
e
I
0
I
0
n
p
129
s
2388
  
  def initialize(options = {})
    self.options.merge!(options)
  end

  def options
    @options ||= { :debug => ENV['DEBUG'] == true }
  end
  
  def parse(input)
    @yydebug = options[:debug]
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end
  
  def on_error(tid, val, vstack)
    BibTeX.log.error("Failed to parse BibTeX Name on value %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect])
  end

  def scan(input)
    @src = StringScanner.new(input)
    @brace_level = 0
    @stack = []
    @word = [:PWORD,'']
    do_scan
  end
  
  private

  def do_scan
    until @src.eos?
      case
      when @src.scan(/,?\s+and\s+/io)
        push_word
        @stack.push([:AND,@src.matched])
        
      when @src.scan(/[\t\r\n\s]+/o)
        push_word
      
      when @src.scan(/,/o)
        push_word
        @stack.push([:COMMA,@src.matched])
        
      when @src.scan(/[[:lower:]][^\t\r\n\s\{\}\d\\,]*/o)
        is_lowercase
        @word[1] << @src.matched

      when @src.scan(/[[:upper:]][^\t\r\n\s\{\}\d\\,]*/o)
        is_uppercase
        @word[1] << @src.matched
        
      when @src.scan(/(\d|\\.)+/o)
        @word[1] << @src.matched
        
      when @src.scan(/\{/o)
        @word[1] << @src.matched
        scan_literal
        
      when @src.scan(/\}/o)
        error_unbalanced

      when @src.scan(/./o)
        @word[1] << @src.matched
      end
    end
    
    push_word
    @stack
  end
  
  def push_word
    unless @word[1].empty?
      @stack.push(@word)
      @word = [:PWORD,'']
    end
  end
  
  def is_lowercase
    @word[0] = :LWORD if @word[0] == :PWORD
  end

  def is_uppercase
    @word[0] = :UWORD if @word[0] == :PWORD
  end
  
  def scan_literal
    @brace_level = 1

 		while @brace_level > 0
			@word[1] << @src.scan_until(/[\{\}]/o).to_s

    	case @src.matched
			when '{'
				@brace_level += 1
			when '}'
				@brace_level -= 1
			else
				@brace_level = 0
				error_unbalanced
			end
    end
  end

  def error_unexpected
    @stack.push [:ERROR,@src.matched]
    BibTeX.log.warn("NameParser: unexpected token `#{@src.matched}' at position #{@src.pos}; brace level #{@brace_level}.")
  end
  
  def error_unbalanced
    @stack.push [:ERROR,'}']
    BibTeX.log.warn("NameParser: unbalanced braces at position #{@src.pos}; brace level #{@brace_level}.")
  end
  
# -*- racc -*-

s
7
names.y
x
11
module_eval
I
-f
I
-1b
I
-1d
I
-1c
I
-1e
I
-2
I
-3
I
-5
I
-10
I
-c
I
-13
I
-15
I
-16
I
-6
I
-14
I
-8
I
-d
I
-19
I
-4
I
-7
I
-e
I
-9
I
-11
I
-17
I
-1a
I
-a
I
-18
I
-b
I
-12
x
10
racc_error
x
9
_reduce_1
x
9
_reduce_2
x
9
_reduce_3
x
9
_reduce_4
x
9
_reduce_5
x
9
_reduce_6
x
9
_reduce_7
x
9
_reduce_8
x
9
_reduce_9
x
10
_reduce_10
x
10
_reduce_11
x
10
_reduce_12
x
10
_reduce_13
x
10
_reduce_14
x
10
_reduce_15
x
10
_reduce_16
x
10
_reduce_17
x
10
_reduce_18
x
10
_reduce_19
x
10
_reduce_20
x
10
_reduce_21
x
10
_reduce_22
x
10
_reduce_23
x
10
_reduce_24
x
10
_reduce_25
x
10
_reduce_26
x
10
_reduce_27
x
10
_reduce_28
x
10
_reduce_29
x
4
Hash
x
16
new_from_literal
x
3
[]=
x
5
error
x
5
COMMA
x
5
UWORD
x
5
LWORD
x
5
PWORD
x
3
AND
x
5
ERROR
x
8
Racc_arg
x
9
const_set
x
21
Racc_token_to_s_table
s
4
$end
s
5
error
s
5
COMMA
s
5
UWORD
s
5
LWORD
s
5
PWORD
s
3
AND
s
5
ERROR
s
6
$start
s
6
result
s
5
names
s
4
name
s
4
word
s
7
u_words
s
3
von
s
4
last
s
5
first
s
9
opt_words
s
6
u_word
s
5
words
x
17
Racc_debug_parser
s
73
  def _reduce_1(val, _values, result)
     result = [] 
    result
  end

s
77
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end

s
79
  def _reduce_3(val, _values, result)
     result = [val[0]] 
    result
  end

s
78
  def _reduce_4(val, _values, result)
     result << val[2] 
    result
  end

s
96
  def _reduce_5(val, _values, result)
     result = Name.new(:last => val[0]) 
    result
  end

s
114
  def _reduce_6(val, _values, result)
     result = Name.new(:first => val[0], :last => val[1]) 
    result
  end

s
130
  def _reduce_7(val, _values, result)
     result = Name.new(:first => val[0], :von => val[1], :last => val[2]) 
    result
  end

s
112
  def _reduce_8(val, _values, result)
     result = Name.new(:von => val[0], :last => val[1]) 
    result
  end

s
135
  def _reduce_9(val, _values, result)
     result = Name.new(:last => val[0], :jr => val[2][0], :first => val[2][1]) 
    result
  end

s
152
  def _reduce_10(val, _values, result)
     result = Name.new(:von => val[0], :last => val[1], :jr => val[3][0], :first => val[3][1]) 
    result
  end

s
164
  def _reduce_11(val, _values, result)
     result = Name.new(:von => val[0,2].join(' '), :last => val[2], :jr => val[4][0], :first => val[4][1]) 
    result
  end

s
78
  def _reduce_12(val, _values, result)
     result = val[0] 
    result
  end

s
85
  def _reduce_13(val, _values, result)
     result = val.join(' ') 
    result
  end

s
85
  def _reduce_14(val, _values, result)
     result = val.join(' ') 
    result
  end

s
78
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_16(val, _values, result)
     result = val[0] 
    result
  end

s
84
  def _reduce_17(val, _values, result)
     result = [nil,val[0]] 
    result
  end

s
87
  def _reduce_18(val, _values, result)
     result = [val[0],val[2]] 
    result
  end

s
78
  def _reduce_19(val, _values, result)
     result = val[0] 
    result
  end

s
90
  def _reduce_20(val, _values, result)
     result = val[0,2].join(' ') 
    result
  end

s
78
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end

s
90
  def _reduce_24(val, _values, result)
     result = val[0,2].join(' ') 
    result
  end

s
75
  def _reduce_25(val, _values, result)
     result = nil 
    result
  end

s
78
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end

s
78
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end

x
12
_reduce_none
M
1
n
n
x
12
_reduce_none
i
7
20
0
78
49
0
1
11
I
5
I
3
I
3
I
3
n
p
1
x
2
[]
p
5
I
-1
I
1e3
I
0
I
1e4
I
7
x
59
/Users/sylvester/Work/bibtex-ruby/lib/bibtex/name_parser.rb
p
3
x
3
val
x
7
_values
x
6
result
x
17
method_visibility
x
15
add_defn_method
p
311
I
2
I
e
I
10
I
89
I
24
I
8a
I
38
I
8b
I
4c
I
8c
I
60
I
8d
I
74
I
8e
I
7a
I
88
I
7d
I
91
I
91
I
92
I
a5
I
93
I
b9
I
94
I
cd
I
95
I
de
I
96
I
e2
I
90
I
e5
I
99
I
f6
I
9a
I
105
I
9b
I
113
I
9c
I
121
I
9d
I
125
I
98
I
128
I
a0
I
13b
I
a1
I
14f
I
a2
I
163
I
a3
I
177
I
a4
I
17d
I
9f
I
180
I
a7
I
193
I
a8
I
1a4
I
a9
I
1ae
I
aa
I
1b4
I
a6
I
1b7
I
ad
I
1ca
I
ae
I
1db
I
af
I
1e5
I
b0
I
1eb
I
ac
I
1ee
I
b3
I
1fe
I
b4
I
203
I
b2
I
206
I
b7
I
215
I
b8
I
21b
I
b6
I
21e
I
bb
I
222
I
bc
I
227
I
bd
I
22c
I
be
I
231
I
bf
I
237
I
c0
I
23c
I
c1
I
241
I
c2
I
247
I
c3
I
24c
I
c4
I
252
I
c5
I
258
I
c6
I
25e
I
c7
I
263
I
c8
I
268
I
c9
I
26e
I
ca
I
273
I
cb
I
278
I
cc
I
27d
I
cd
I
283
I
ce
I
288
I
cf
I
28d
I
d0
I
292
I
d1
I
297
I
d2
I
29c
I
d3
I
2a1
I
d4
I
2a6
I
d5
I
2ab
I
d6
I
2b0
I
d7
I
2b5
I
d8
I
2bc
I
ba
I
2bf
I
da
I
2c4
I
dc
I
2c9
I
e6
I
2d2
I
df
I
2d9
I
e0
I
2e1
I
e1
I
2e9
I
e2
I
2f2
I
e3
I
2fb
I
e4
I
304
I
e5
I
30d
I
e6
I
315
I
de
I
318
I
e8
I
31d
I
ea
I
321
I
ec
I
324
I
ed
I
326
I
ee
I
328
I
ef
I
32a
I
f0
I
32c
I
f1
I
32e
I
f2
I
330
I
f3
I
332
I
f4
I
334
I
f5
I
336
I
f6
I
338
I
f7
I
33a
I
f8
I
33c
I
f9
I
33e
I
fa
I
346
I
fc
I
349
I
fd
I
34c
I
fe
I
34f
I
ff
I
352
I
100
I
355
I
101
I
358
I
102
I
35b
I
103
I
35e
I
104
I
361
I
105
I
364
I
106
I
367
I
107
I
36a
I
108
I
36d
I
109
I
370
I
10a
I
373
I
10b
I
376
I
10c
I
379
I
10d
I
37c
I
10e
I
37f
I
10f
I
382
I
110
I
38b
I
112
I
393
I
118
I
3a1
I
11f
I
3af
I
126
I
3bd
I
12d
I
3cb
I
134
I
3d9
I
13b
I
3e7
I
142
I
3f5
I
149
I
403
I
150
I
411
I
157
I
41f
I
15e
I
42d
I
165
I
43b
I
16c
I
449
I
173
I
457
I
17a
I
465
I
181
I
473
I
188
I
481
I
18f
I
48f
I
196
I
49d
I
19d
I
4ab
I
1a4
I
4b9
I
1ab
I
4c7
I
1b2
I
4d5
I
1b9
I
4e3
I
1c0
I
4f1
I
1c7
I
4ff
I
1ce
I
50d
I
1d5
I
51b
I
1dc
I
529
I
1e3
I
537
x
59
/Users/sylvester/Work/bibtex-ruby/lib/bibtex/name_parser.rb
p
14
x
17
racc_action_table
x
17
racc_action_check
x
19
racc_action_pointer
x
19
racc_action_default
x
15
racc_goto_table
x
15
racc_goto_check
x
17
racc_goto_pointer
x
17
racc_goto_default
x
17
racc_reduce_table
x
13
racc_reduce_n
x
12
racc_shift_n
x
16
racc_token_table
x
12
racc_nt_base
x
19
racc_use_result_var
x
13
attach_method
p
3
I
2
I
c
I
21
x
59
/Users/sylvester/Work/bibtex-ruby/lib/bibtex/name_parser.rb
p
0
x
13
attach_method
p
7
I
0
I
7
I
9
I
9
I
12
I
b
I
2e
x
59
/Users/sylvester/Work/bibtex-ruby/lib/bibtex/name_parser.rb
p
0
