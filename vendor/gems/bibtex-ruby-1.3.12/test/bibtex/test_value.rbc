!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
37
5
7
0
64
47
49
1
1
15
99
7
2
65
49
3
2
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
2
11
I
6
I
0
I
0
I
0
n
p
7
s
9
helper.rb
x
7
require
x
6
BibTeX
x
11
open_module
x
15
__module_init__
M
1
n
n
x
6
BibTeX
i
33
5
66
99
7
0
45
1
2
43
3
65
49
4
3
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
11
I
6
I
0
I
0
I
0
n
p
8
x
9
ValueTest
x
8
MiniTest
n
x
4
Spec
x
10
open_class
x
14
__class_init__
M
1
n
n
x
9
ValueTest
i
46
5
66
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
11
I
3
I
0
I
0
I
0
n
p
9
s
10
when empty
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
33
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
s
27
be equal to an empty string
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
76
5
45
0
1
13
71
2
47
9
22
47
49
3
0
13
47
49
4
0
15
8
25
49
2
0
7
5
64
83
6
47
49
7
1
15
5
45
0
8
13
71
2
47
9
60
47
49
3
0
13
7
5
64
47
49
4
1
15
8
66
7
5
64
49
2
1
7
5
64
83
6
47
49
7
1
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
s
0

x
2
==
x
6
assert
n
p
5
I
0
I
8
I
23
I
9
I
4c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
s
8
be empty
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
72
5
45
0
1
13
71
2
47
9
22
47
49
3
0
13
47
49
4
0
15
8
25
49
2
0
49
5
0
47
49
6
1
15
5
45
0
7
13
71
2
47
9
58
47
49
3
0
13
7
8
64
47
49
4
1
15
8
64
7
8
64
49
2
1
49
5
0
47
49
6
1
11
I
5
I
0
I
0
I
0
I
-2
p
9
x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
x
6
empty?
x
6
assert
n
s
0

p
5
I
0
I
c
I
21
I
d
I
48
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
22
match an empty pattern
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
108
5
45
0
1
13
71
2
47
9
22
47
49
3
0
13
47
49
4
0
15
8
25
49
2
0
7
5
13
70
9
43
15
44
43
6
7
7
78
49
2
2
6
5
49
8
1
47
49
9
1
15
5
45
0
10
13
71
2
47
9
76
47
49
3
0
13
7
7
64
47
49
4
1
15
8
82
7
7
64
49
2
1
7
11
13
70
9
100
15
44
43
6
7
7
78
49
2
2
6
11
49
8
1
47
49
9
1
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
n
x
6
Regexp
s
0

x
2
=~
x
6
assert
n
n
p
5
I
0
I
10
I
33
I
11
I
6c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
7
I
0
I
7
I
b
I
b
I
16
I
f
I
21
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
7
context
s
5
#join
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
66
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
15
5
7
9
64
56
10
47
50
2
1
15
5
7
11
64
56
12
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
s
30
return empty string when empty
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
84
5
7
0
64
45
1
2
13
71
3
47
9
25
47
49
4
0
13
47
49
5
0
15
8
28
49
3
0
49
6
0
49
7
0
47
49
8
2
15
5
7
0
64
45
1
9
13
71
3
47
9
67
47
49
4
0
13
7
0
64
47
49
5
1
15
8
73
7
0
64
49
3
1
49
6
0
49
7
0
47
49
8
2
11
I
6
I
0
I
0
I
0
I
-2
p
10
s
0

x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
x
4
join
x
4
to_s
x
12
assert_equal
n
p
5
I
0
I
17
I
27
I
18
I
54
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
s
27
return the string if atomic
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
45
5
7
0
64
45
1
2
13
71
3
47
9
28
47
49
4
0
13
7
0
64
47
49
5
1
15
8
34
7
0
64
49
3
1
49
6
0
49
7
0
47
49
8
2
11
I
6
I
0
I
0
I
0
I
-2
p
9
s
3
foo
x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
x
4
join
x
4
to_s
x
12
assert_equal
p
3
I
0
I
1b
I
2d
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
73
return a string concatenation of all strings when containing only strings
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
106
5
7
0
64
45
1
2
13
71
3
47
9
31
47
49
4
0
13
7
5
64
7
6
64
47
49
7
2
15
8
40
7
5
64
7
6
64
49
3
2
49
8
0
49
9
0
47
49
10
2
15
5
7
0
64
45
1
11
13
71
3
47
9
84
47
49
4
0
13
7
5
64
7
6
64
35
2
47
49
7
1
15
8
95
7
5
64
7
6
64
35
2
49
3
1
49
8
0
49
9
0
47
49
10
2
11
I
7
I
0
I
0
I
0
I
-2
p
12
s
6
foobar
x
5
Value
n
x
3
new
x
8
allocate
s
3
foo
s
3
bar
x
10
initialize
x
4
join
x
4
to_s
x
12
assert_equal
n
p
5
I
0
I
1e
I
33
I
1f
I
6a
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
56
should be atomic after join when containing only strings
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
93
5
45
0
1
13
71
2
47
9
28
47
49
3
0
13
7
4
64
7
5
64
47
49
6
2
15
8
37
7
4
64
7
5
64
49
2
2
49
7
0
47
49
8
1
15
5
45
0
9
13
71
2
47
9
73
47
49
3
0
13
7
4
64
7
5
64
47
49
6
2
15
8
82
7
4
64
7
5
64
49
2
2
49
10
0
49
7
0
47
49
11
1
11
I
6
I
0
I
0
I
0
I
-2
p
12
x
5
Value
n
x
3
new
x
8
allocate
s
3
foo
s
3
bar
x
10
initialize
x
7
atomic?
x
6
refute
n
x
4
join
x
6
assert
p
5
I
0
I
22
I
2d
I
23
I
5d
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
39
do nothing when containing only symbols
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
92
45
0
1
13
71
2
47
9
23
47
49
3
0
13
7
4
47
49
5
1
15
8
28
7
4
49
2
1
19
0
15
5
20
0
20
0
49
6
0
47
49
7
2
15
45
0
8
13
71
2
47
9
69
47
49
3
0
13
7
4
7
9
47
49
5
2
15
8
76
7
4
7
9
49
2
2
19
0
15
5
20
0
20
0
49
6
0
47
49
7
2
11
I
6
I
1
I
0
I
0
I
-2
p
10
x
5
Value
n
x
3
new
x
8
allocate
x
3
foo
x
10
initialize
x
4
join
x
12
assert_equal
n
x
3
bar
p
9
I
0
I
26
I
1f
I
27
I
2c
I
28
I
4f
I
29
I
5c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
5
value
s
59
do nothing when containing only symbols and a single string
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
100
45
0
1
13
71
2
47
9
26
47
49
3
0
13
7
4
7
5
64
47
49
6
2
15
8
34
7
4
7
5
64
49
2
2
19
0
15
5
20
0
20
0
49
7
0
47
49
8
2
15
45
0
9
13
71
2
47
9
76
47
49
3
0
13
7
10
64
7
11
47
49
6
2
15
8
84
7
10
64
7
11
49
2
2
19
0
15
5
20
0
20
0
49
7
0
47
49
8
2
11
I
6
I
1
I
0
I
0
I
-2
p
12
x
5
Value
n
x
3
new
x
8
allocate
x
3
foo
s
3
bar
x
10
initialize
x
4
join
x
12
assert_equal
n
s
3
foo
x
3
bar
p
9
I
0
I
2c
I
25
I
2d
I
32
I
2e
I
57
I
2f
I
64
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
5
value
p
13
I
0
I
16
I
b
I
1a
I
16
I
1d
I
21
I
21
I
2c
I
25
I
37
I
2b
I
42
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
5
#to_s
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
55
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
15
5
7
9
64
56
10
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
11
s
27
return the string if atomic
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
42
5
7
0
64
45
1
2
13
71
3
47
9
28
47
49
4
0
13
7
0
64
47
49
5
1
15
8
34
7
0
64
49
3
1
49
6
0
47
49
7
2
11
I
6
I
0
I
0
I
0
I
-2
p
8
s
7
foo bar
x
5
Value
n
x
3
new
x
8
allocate
x
10
initialize
x
4
to_s
x
12
assert_equal
p
3
I
0
I
35
I
2a
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
s
64
return the symbol as string when containing only a single symbol
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
40
5
7
0
64
45
1
2
13
71
3
47
9
27
47
49
4
0
13
7
5
47
49
6
1
15
8
32
7
5
49
3
1
49
7
0
47
49
8
2
11
I
6
I
0
I
0
I
0
I
-2
p
9
s
3
foo
x
5
Value
n
x
3
new
x
8
allocate
x
3
foo
x
10
initialize
x
4
to_s
x
12
assert_equal
p
3
I
0
I
38
I
28
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
42
return all string tokens concatenated by #
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
48
5
7
0
64
45
1
2
13
71
3
47
9
31
47
49
4
0
13
7
5
64
7
6
64
47
49
7
2
15
8
40
7
5
64
7
6
64
49
3
2
49
8
0
47
49
9
2
11
I
7
I
0
I
0
I
0
I
-2
p
10
s
13
"foo" # "bar"
x
5
Value
n
x
3
new
x
8
allocate
s
3
foo
s
3
bar
x
10
initialize
x
4
to_s
x
12
assert_equal
p
3
I
0
I
3b
I
30
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
42
return all symbol tokens concatenated by #
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
44
5
7
0
64
45
1
2
13
71
3
47
9
29
47
49
4
0
13
7
5
7
6
47
49
7
2
15
8
36
7
5
7
6
49
3
2
49
8
0
47
49
9
2
11
I
7
I
0
I
0
I
0
I
-2
p
10
s
9
foo # bar
x
5
Value
n
x
3
new
x
8
allocate
x
3
foo
x
3
bar
x
10
initialize
x
4
to_s
x
12
assert_equal
p
3
I
0
I
3e
I
2c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
53
return all symbol and string tokens concatenated by #
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
92
5
7
0
64
45
1
2
13
71
3
47
9
30
47
49
4
0
13
7
5
7
6
64
47
49
7
2
15
8
38
7
5
7
6
64
49
3
2
49
8
0
47
49
9
2
15
5
7
10
64
45
1
11
13
71
3
47
9
76
47
49
4
0
13
7
12
64
7
13
47
49
7
2
15
8
84
7
12
64
7
13
49
3
2
49
8
0
47
49
9
2
11
I
7
I
0
I
0
I
0
I
-2
p
14
s
11
foo # "bar"
x
5
Value
n
x
3
new
x
8
allocate
x
3
foo
s
3
bar
x
10
initialize
x
4
to_s
x
12
assert_equal
s
11
"foo" # bar
n
s
3
foo
x
3
bar
p
5
I
0
I
41
I
2e
I
42
I
5c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
11
I
0
I
34
I
b
I
37
I
16
I
3a
I
21
I
3d
I
2c
I
40
I
37
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
11
conversions
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
41
5
56
0
47
50
1
0
15
5
7
2
64
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
4
1
15
5
7
7
64
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
100
99
7
0
45
1
2
43
3
65
49
4
3
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
15
45
8
9
13
71
10
47
9
55
47
49
11
0
13
7
12
64
47
49
13
1
15
8
61
7
12
64
49
10
1
45
8
14
13
71
10
47
9
87
47
49
11
0
13
7
12
64
7
15
47
49
13
2
15
8
95
7
12
64
7
15
49
10
2
35
2
38
16
11
I
7
I
0
I
0
I
0
I
-2
p
17
x
6
Upcase
x
6
BibTeX
n
x
6
Filter
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
Upcase
i
16
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
4
x
5
apply
M
1
n
n
x
5
apply
i
20
20
0
44
43
0
49
1
1
9
17
20
0
49
2
0
8
19
20
0
11
I
3
I
1
I
1
I
1
n
p
3
x
6
String
x
5
is_a?
x
6
upcase
p
7
I
-1
I
49
I
0
I
4a
I
13
I
0
I
14
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
5
value
x
17
method_visibility
x
15
add_defn_method
p
3
I
2
I
49
I
10
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
13
attach_method
x
5
Value
n
x
3
new
x
8
allocate
s
3
foo
x
10
initialize
n
x
3
bar
x
7
@values
p
5
I
0
I
48
I
1f
I
4d
I
64
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
5
setup
s
8
#convert
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
66
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
15
5
7
9
64
56
10
47
50
2
1
15
5
7
11
64
56
12
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
13
s
46
convert the value when given a filter instance
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
21
5
7
0
64
7
1
64
35
2
39
2
56
3
50
4
0
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
s
3
FOO
s
11
"FOO" # bar
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
19
57
19
0
15
20
0
45
0
1
49
2
0
49
3
1
49
4
0
11
I
4
I
1
I
1
I
1
n
p
5
x
6
Upcase
n
x
8
instance
x
7
convert
x
4
to_s
p
3
I
0
I
52
I
13
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
3
map
x
12
assert_equal
p
3
I
0
I
52
I
15
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
s
43
convert the value when given a filter class
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
21
5
7
0
64
7
1
64
35
2
39
2
56
3
50
4
0
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
s
3
FOO
s
11
"FOO" # bar
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
16
57
19
0
15
20
0
45
0
1
49
2
1
49
3
0
11
I
4
I
1
I
1
I
1
n
p
4
x
6
Upcase
n
x
7
convert
x
4
to_s
p
3
I
0
I
56
I
10
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
3
map
x
12
assert_equal
p
3
I
0
I
56
I
15
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
49
convert the value when given the name of a filter
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
42
5
7
0
64
7
1
64
35
2
39
2
56
3
50
4
0
47
49
5
2
15
5
7
0
64
7
1
64
35
2
39
2
56
6
50
4
0
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
7
s
3
FOO
s
11
"FOO" # bar
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
15
57
19
0
15
20
0
7
0
49
1
1
49
2
0
11
I
4
I
1
I
1
I
1
n
p
3
x
6
upcase
x
7
convert
x
4
to_s
p
3
I
0
I
5a
I
f
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
3
map
x
12
assert_equal
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
16
57
19
0
15
20
0
7
0
64
49
1
1
49
2
0
11
I
4
I
1
I
1
I
1
n
p
3
s
6
upcase
x
7
convert
x
4
to_s
p
3
I
0
I
5b
I
10
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
p
5
I
0
I
5a
I
15
I
5b
I
2a
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
43
convert the value when using a ghost method
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
21
5
7
0
64
7
1
64
35
2
39
2
56
3
50
4
0
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
s
3
FOO
s
11
"FOO" # bar
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
13
57
19
0
15
20
0
49
0
0
49
1
0
11
I
3
I
1
I
1
I
1
n
p
2
x
14
convert_upcase
x
4
to_s
p
3
I
0
I
5f
I
d
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
3
map
x
12
assert_equal
p
3
I
0
I
5f
I
15
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
44
not alter the value when using a filter name
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
40
39
0
56
1
50
2
0
15
5
7
3
64
7
4
64
35
2
39
0
7
5
13
70
10
32
44
43
6
12
49
7
1
50
8
0
47
49
9
2
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
12
57
19
0
15
20
0
7
0
49
1
1
11
I
4
I
1
I
1
I
1
n
p
2
x
6
upcase
x
7
convert
p
3
I
0
I
63
I
c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
4
each
s
3
foo
s
11
"foo" # bar
x
4
to_s
x
4
Proc
x
14
__from_block__
x
3
map
x
12
assert_equal
p
5
I
0
I
63
I
8
I
64
I
28
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
45
not alter the value when using a ghost method
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
40
39
0
56
1
50
2
0
15
5
7
3
64
7
4
64
35
2
39
0
7
5
13
70
10
32
44
43
6
12
49
7
1
50
8
0
47
49
9
2
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
14
convert_upcase
p
3
I
0
I
68
I
a
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
4
each
s
3
foo
s
11
"foo" # bar
x
4
to_s
x
4
Proc
x
14
__from_block__
x
3
map
x
12
assert_equal
p
5
I
0
I
68
I
8
I
69
I
28
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
13
I
0
I
51
I
b
I
55
I
16
I
59
I
21
I
5e
I
2c
I
62
I
37
I
67
I
42
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
7
context
s
9
#convert!
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
33
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
s
49
convert the value when given the name of a filter
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
21
5
7
0
64
7
1
64
35
2
39
2
56
3
50
4
0
47
49
5
2
11
I
5
I
0
I
0
I
0
I
-2
p
6
s
3
FOO
s
11
"FOO" # bar
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
15
57
19
0
15
20
0
7
0
49
1
1
49
2
0
11
I
4
I
1
I
1
I
1
n
p
3
x
6
upcase
x
8
convert!
x
4
to_s
p
3
I
0
I
6f
I
f
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
3
map
x
12
assert_equal
p
3
I
0
I
6f
I
15
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
s
47
alter the value when given the name of a filter
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
40
39
0
56
1
50
2
0
15
5
7
3
64
7
4
64
35
2
39
0
7
5
13
70
10
32
44
43
6
12
49
7
1
50
8
0
47
49
9
2
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
12
57
19
0
15
20
0
7
0
49
1
1
11
I
4
I
1
I
1
I
1
n
p
2
x
6
upcase
x
8
convert!
p
3
I
0
I
73
I
c
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
4
each
s
3
FOO
s
11
"FOO" # bar
x
4
to_s
x
4
Proc
x
14
__from_block__
x
3
map
x
12
assert_equal
p
5
I
0
I
73
I
8
I
74
I
28
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
41
alter the value when using a ghost method
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
40
39
0
56
1
50
2
0
15
5
7
3
64
7
4
64
35
2
39
0
7
5
13
70
10
32
44
43
6
12
49
7
1
50
8
0
47
49
9
2
11
I
6
I
0
I
0
I
0
I
-2
p
10
x
7
@values
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
15
convert_upcase!
p
3
I
0
I
78
I
a
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
1
x
1
v
x
4
each
s
3
FOO
s
11
"FOO" # bar
x
4
to_s
x
4
Proc
x
14
__from_block__
x
3
map
x
12
assert_equal
p
5
I
0
I
78
I
8
I
79
I
28
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
7
I
0
I
6e
I
b
I
72
I
16
I
77
I
21
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
s
5
#to_s
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
-2
p
3
s
85
accept a :filter option and convert the values accordingly without changing the value
M
1
p
2
x
9
for_block
t
n
x
9
ValueTest
i
52
5
7
0
64
39
1
79
49
2
1
44
43
3
79
49
4
1
13
7
5
7
6
49
7
2
15
49
8
1
47
49
9
2
15
5
7
10
64
39
1
79
49
2
1
49
8
0
47
49
9
2
11
I
8
I
0
I
0
I
0
I
-2
p
11
s
11
"FOO" # bar
x
7
@values
x
2
[]
x
4
Hash
x
16
new_from_literal
x
6
filter
x
6
upcase
x
3
[]=
x
4
to_s
x
12
assert_equal
s
11
"foo" # bar
p
5
I
0
I
80
I
22
I
81
I
34
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
6
should
p
3
I
0
I
7f
I
b
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
9
I
0
I
47
I
8
I
50
I
13
I
6d
I
1e
I
7e
I
29
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
p
9
I
2
I
6
I
d
I
15
I
18
I
33
I
23
I
46
I
2e
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
13
attach_method
p
3
I
2
I
4
I
21
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
x
13
attach_method
p
5
I
0
I
1
I
9
I
3
I
25
x
59
/Users/sylvester/Work/bibtex-ruby/test/bibtex/test_value.rb
p
0
