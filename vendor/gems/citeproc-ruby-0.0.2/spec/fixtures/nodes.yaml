---
- class: CSL::Nodes::Text
  describe:
    processing:
      returns an empty string by default:
        input:
        - <text/>
        expected:
        - ""
        item: {}
        format: default
      handles terms correctly:
        item: {}
        format: default
        input:
        - <text term="editorial-director" plural="false" />
        - <text term="editorial-director" plural="true" />
        - <text term="section" form="symbol" plural="false" />
        - <text term="section" form="symbol" plural="true" />
        expected:
        - editor
        - editors
        - §
        - §§
- class: CSL::Nodes::Number
  describe:
    processing:
      returns an empty string by default:
        format: default
        input:
        - <number/>
        expected:
        - ""
        item: {}
      supports variables and return numeric value by default:
        format: default
        item:
          edition: '3'
        input:
        - <number variable="edition"/>
        expected:
        - '3'
      supports ordinals and roman numbers:
        format: default
        item:
          issue: '1'
          volume: '2'
          edition: '3'
          number: '23'
        input:
        - <number variable="issue" form="ordinal"/>
        - <number variable="volume" form="ordinal"/>
        - <number variable="edition" form="ordinal"/>
        - <number variable="number" form="ordinal"/>
        - <number variable="issue" form="long-ordinal"/>
        - <number variable="volume" form="long-ordinal"/>
        - <number variable="edition" form="long-ordinal"/>
        - <number variable="issue" form="roman"/>
        - <number variable="volume" form="roman"/>
        - <number variable="edition" form="roman"/>
        - <number variable="number" form="roman"/>
        - <number variable="number" form="roman" text-case="uppercase"/>
        expected:
        - 1st
        - 2nd
        - 3rd
        - 23rd
        - first
        - second
        - third
        - i
        - ii
        - iii
        - xxiii
        - XXIII
- class: CSL::Nodes::Date
  describe:
    localized processing:
      returns an empty string by default for numeric:
        format: default
        item: {}
        input:
        - <date form="numeric"/>
        expected:
        - ""
      returns an empty string by default for text:
        format: default
        item: {}
        input:
        - <date form="text"/>
        expected:
        - ""
      returns numeric result given date-parts:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 12
        input:
        - <date variable="issued" form="numeric"/>
        - <date variable="issued" form="numeric" date-parts="year-month-day"/>
        - <date variable="issued" form="numeric" date-parts="year-month"/>
        - <date variable="issued" form="numeric" date-parts="year"/>
        expected:
        - '03/12/1983'
        - '03/12/1983'
        - '03/1983'
        - '1983'
      returns numeric season correctly:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 12
            season: 1
        input:
        - <date variable="issued" form="numeric"/>
        - <date variable="issued" form="numeric" date-parts="year-month-day"/>
        - <date variable="issued" form="numeric" date-parts="year-month"/>
        - <date variable="issued" form="numeric" date-parts="year"/>
        expected:
        - 'Spring/12/1983'
        - 'Spring/12/1983'
        - 'Spring/1983'
        - '1983'
      returns string-numeric season correctly:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 12
            season: '2'
        input:
        - <date variable="issued" form="numeric"/>
        - <date variable="issued" form="numeric" date-parts="year-month-day"/>
        - <date variable="issued" form="numeric" date-parts="year-month"/>
        - <date variable="issued" form="numeric" date-parts="year"/>
        expected:
        - 'Summer/12/1983'
        - 'Summer/12/1983'
        - 'Summer/1983'
        - '1983'
      returns literal season correctly:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 12
            season: 'THE SEASON'
        input:
        - <date variable="issued" form="numeric"/>
        - <date variable="issued" form="numeric" date-parts="year-month-day"/>
        - <date variable="issued" form="numeric" date-parts="year-month"/>
        - <date variable="issued" form="numeric" date-parts="year"/>
        expected:
        - 'THE SEASON/12/1983'
        - 'THE SEASON/12/1983'
        - 'THE SEASON/1983'
        - '1983'
      returns text result given date-parts:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 7
        input:
        - <date variable="issued" form="text"/>
        - <date variable="issued" form="text" date-parts="year-month-day"/>
        - <date variable="issued" form="text" date-parts="year-month"/>
        - <date variable="issued" form="text" date-parts="year"/>
        expected:
        - 'March 07, 1983'
        - 'March 07, 1983'
        - 'March 1983'
        - '1983'
      returns text result given date-parts and overrule:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 7
        input:
        - <date variable="issued" form="text"><date-part name="month" form="short"/><date-part name="day" form="numeric"/></date>
        - <date variable="issued" form="text" date-parts="year-month-day"><date-part name="month" form="verb-short"/><date-part name="day" form="numeric"/></date>
        - <date variable="issued" form="text" date-parts="year-month"><date-part name="month" form="short"/><date-part name="day" form="numeric"/></date>
        - <date variable="issued" form="text" date-parts="year"><date-part name="month" form="short"/><date-part name="day" form="numeric"/></date>
        expected:
        - 'Mar. 7, 1983'
        - 'March 7, 1983'
        - 'Mar. 1983'
        - '1983'
      returns text result given date-parts and overrule in HTML:
        format: html
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 7
        input:
        - <date variable="issued" form="text"><date-part name="month" form="short"/><date-part name="day" form="numeric"/></date>
        - <date variable="issued" form="text" date-parts="year-month-day"><date-part name="month" form="verb-short" text-case="uppercase"/><date-part name="day" form="numeric"/></date>
        expected:
        - 'Mar. 7, 1983'
        - '<span style="text-transform: uppercase">March </span>7, 1983'
    non-localized processing:
      returns an empty string by default:
        format: default
        item: {}
        input:
        - <date/>
        expected:
        - ""
      returns result given date-parts:
        format: default
        item:
          issued:
            date-parts:
            - - 1983
              - 3
              - 12
        input:
        - <date variable="issued"/>
        - <date variable="issued"><date-part name="year" form="long" suffix="-"/><date-part name="month" form="numeric" suffix="-"/><date-part name="day" form="numeric"/></date>
        - <date variable="issued"><date-part name="year" form="long" suffix="-"/><date-part name="month" form="numeric-leading-zeros" suffix=""/></date>
        - <date variable="issued"><date-part name="year"/><date>
        - <date variable="issued"><date-part name="year" form="short" suffix=" "/><date-part name="month" form="long" suffix=" "/><date-part name="day" form="ordinal"/></date>
        expected:
        - ''
        - '1983-3-12'
        - '1983-03'
        - '1983'
        - '83 March 12th'
